{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9cf40597",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-15T00:13:15.729757Z",
     "iopub.status.busy": "2022-06-15T00:13:15.729461Z",
     "iopub.status.idle": "2022-06-15T00:13:15.733252Z",
     "shell.execute_reply": "2022-06-15T00:13:15.732492Z",
     "shell.execute_reply.started": "2022-06-15T00:13:15.729725Z"
    }
   },
   "source": [
    "# Indução"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a16b6c89",
   "metadata": {},
   "source": [
    "- É importante garantir que:\n",
    "1. Resolvemos uma instancia menor do problema (o caso base)\n",
    "2. A soluyção para cada problema pode ser construida de soluções de problemas menores (passo indutivo)\n",
    "\n",
    "- Com esse princípio em mente, podemos então **concentrar em reduzir o problema em menores problemas**, ou um conjunto de menores problemas. \n",
    "- O problema é que **não é fácil identificar um jeito de reduzir o problema.** \n",
    "- Desse modo, o truque é **aprender várias técnicas que facilitam esse processo.**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8aed08c0",
   "metadata": {},
   "source": [
    "## Avaliação de polinômios\n",
    "**PROBLEMA**: Dada uma sequência de números reais **a<sub>n</sub>, a<sub>n-1</sub>, ..., a<sub>1</sub>, a<sub>0</sub>** e um número real *x*, computar o valor do polinômio:\n",
    "\n",
    "**<center> P<sub>n</sub>(x) = a<sub>n</sub>x<sup>n</sup> + a<sub>n-1</sub>x<sup>n-1</sup> + ... + a<sub>1</sub>x + a<sub>0</sub> </center>**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "abbba4a3",
   "metadata": {},
   "source": [
    "**SOLUÇÃO:**\n",
    "- O problema envolve n + 2 números. \n",
    "- Resolvemos ele, encontrando a solução para problemas menores para então resolvê-lo por completo usando recursão (ou, como chamamos, usando indução).\n",
    "- A primeira tentativa é reduzir o problema **removendo a<sub>n</sub>:**\n",
    "\n",
    "**<center> P<sub>n</sub>(x) = a<sub>n-1</sub>x<sup>n-1</sup> + ... + a<sub>1</sub>x + a<sub>0</sub> </center>**\n",
    "\n",
    "- Mesmo problema mas com um parâmetro a menos. *Um problema menor.*\n",
    "- Resolvemos então por indução.\n",
    "\n",
    "\n",
    "**HIPÓTESE INDUTIVA:** \n",
    "\n",
    "Sabemos como computar o polinômio **P<sub>n-1</sub>(x)**, ou seja, sabemos computar um polinomio representado pela entrada **a<sub>n-1</sub>, ..., a<sub>1</sub>, a<sub>0</sub>** no ponto **x**.\n",
    "\n",
    "**CONTINUANDO A SOLUÇÃO:**\n",
    "- Conseguimos agora usar a hipótese para resolver o problema por indução:\n",
    "    - Primeiro, temos que resolver o caso base, que é computar **a<sub>0</sub>**, que é trivial.\n",
    "    - Agora, resolvemos o problema original com a ajuda da solução para problemas menores. \n",
    "        - Ou seja, resolvemos **P<sub>n</sub>(x)** com a solução de **P<sub>n-1</sub>(x)**\n",
    "        - Computamos **x<sup>n</sup>**, multiplicamos por **a<sub>n</sub>** e adicionamos a **P<sub>n-1</sub>(x)**: \n",
    "            - P<sub>n</sub>(x) = P<sub>n-1</sub>(x) + a<sub>n</sub>x<sup>n</sup>\n",
    "- Em código, temos:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "c2876276",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-06-15T01:28:11.322958Z",
     "iopub.status.busy": "2022-06-15T01:28:11.322674Z",
     "iopub.status.idle": "2022-06-15T01:28:11.330148Z",
     "shell.execute_reply": "2022-06-15T01:28:11.329403Z",
     "shell.execute_reply.started": "2022-06-15T01:28:11.322926Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Entrada estipulada no problema\n",
    "a = [1, 2, 3, 4, 5]  # Sequencia de números reais\n",
    "x = 1  # número real x\n",
    "\n",
    "# Função para resolução do problema\n",
    "def P(a, x):\n",
    "    n = len(a)\n",
    "    \n",
    "    if n == 1:\n",
    "        return a[0]  # ou a[n]\n",
    "    \n",
    "    # Passo indutivo\n",
    "    N = len(a)-1  # para funcionar a indexação do a[n]\n",
    "    Pn = P(a[:n-1], x) + a[N]*x**N\n",
    "    \n",
    "    return Pn\n",
    "\n",
    "P(a, x)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
